/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multipleproducerconsumer;

import java.util.concurrent.Semaphore;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author MBR
 */
public class GUI extends javax.swing.JFrame {
        
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Shared Buffer");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        sizeNow3 = new javax.swing.JTextField();
        sizeprogress = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        setSize = new javax.swing.JButton();
        size = new javax.swing.JTextField();
        produceItem = new javax.swing.JTextField();
        consume = new javax.swing.JButton();
        produce = new javax.swing.JButton();
        consumeItem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListBoundedBuffer = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mutexX = new javax.swing.JTextField();
        buffersize = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        emptyY = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fullL = new javax.swing.JTextField();

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Mutix");

        sizeNow3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeNow3ActionPerformed(evt);
            }
        });

        sizeprogress.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizeprogressStateChanged(evt);
            }
        });

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 1, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(102, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Shared Buffer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N

        setSize.setBackground(new java.awt.Color(0, 0, 0));
        setSize.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        setSize.setForeground(new java.awt.Color(255, 255, 255));
        setSize.setText("SET SIZE");
        setSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSizeActionPerformed(evt);
            }
        });

        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });

        consume.setBackground(new java.awt.Color(133, 14, 53));
        consume.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        consume.setText("CONSUME");
        consume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumeActionPerformed(evt);
            }
        });

        produce.setBackground(new java.awt.Color(207, 10, 10));
        produce.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        produce.setText("PRODUCE");
        produce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produceActionPerformed(evt);
            }
        });

        consumeItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumeItemActionPerformed(evt);
            }
        });

        ListBoundedBuffer.setBackground(new java.awt.Color(0, 0, 0));
        ListBoundedBuffer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ListBoundedBuffer.setForeground(new java.awt.Color(255, 255, 255));
        ListBoundedBuffer.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListBoundedBuffer.setDropMode(javax.swing.DropMode.ON);
        ListBoundedBuffer.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                ListBoundedBufferAncestorRemoved(evt);
            }
        });
        ListBoundedBuffer.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListBoundedBufferValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListBoundedBuffer);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(produce, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setSize, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consume, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(produceItem, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(consumeItem, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setSize, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(produceItem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(produce, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consumeItem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consume, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jPanel3.setBackground(new java.awt.Color(102, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hidden Variable", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buffer Size =>");

        mutexX.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        mutexX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mutexXActionPerformed(evt);
            }
        });

        buffersize.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        buffersize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buffersizeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Full =>");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Empty =>");

        emptyY.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        emptyY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyYActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mutex =>");

        fullL.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        fullL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fullL, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mutexX, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buffersize, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emptyY, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buffersize, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mutexX, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emptyY, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullL, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void produceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produceActionPerformed
        try {
//            producer thread
            int item = Integer.parseInt(produceItem.getText());
            Producer prod = new Producer(buffer, item);
            Thread t2 = new Thread(prod);
            t2.start();
            t2.join();
//            add item in list
            numberItems = buffer.getCounter(); // get counter from bouded buffer
            getbuffersize = buffer.getBufferSize(); // get buffer size from bouded buffer
            if (!flagTohandelListSizeWhenConsummingItems){
                JOptionPane.showMessageDialog(null, "You should have to consume an Item from LIST to Produce another");
            }else if (((numberItems == getbuffersize) & getbuffersize > 0) | (getbuffersize == 1)){
                int number;
                number = Integer.parseInt(produceItem.getText());
                model.addElement(number);
                ListBoundedBuffer.setModel(model);
                flagTohandelListSizeWhenConsummingItems = false;
            }else if(numberItems < getbuffersize){
                int number;
                number = Integer.parseInt(produceItem.getText());
                model.addElement(number);
                ListBoundedBuffer.setModel(model);
            }else if (getbuffersize == 0 ){
                JOptionPane.showMessageDialog(null, "Enter another number instead of ZERO to be the SIZE of LIST");
            }else{
                JOptionPane.showMessageDialog(null, "List is Full");
            }

//            get items
            Semaphore mutex = buffer.getMutex();
            Semaphore empty = buffer.getEmpty();
            Semaphore full = buffer.getFull();
//            set items in text field
            mutexX.setText(mutex.hashCode() + "");
            emptyY.setText(empty.hashCode() + "");
            fullL.setText(full.hashCode() + "");
            produceItem.setText("");
//            hide the text fields
            mutexX.setEnabled(false);
            emptyY.setEnabled(false);
            fullL.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "plz, Enter an Integer number");
        }
        
    }//GEN-LAST:event_produceActionPerformed

    private void consumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumeActionPerformed
        if ((flagTohandelListSizeWhenConsummingItems == false) & (numberItems == getbuffersize) & (getbuffersize > 0))
            flagTohandelListSizeWhenConsummingItems = true;
        
        try {
            Consumer cons = new Consumer(buffer);
            Thread t1 = new Thread(cons);
            t1.start();
            t1.join();
//            get item from list and set it in the Textfield
            int item = cons.getItem();
            consumeItem.setText(item + "");
            model.removeElementAt(0);
//            get mutex, empty, full from bounded buffer
            Semaphore mutex = buffer.getMutex();
            Semaphore empty = buffer.getEmpty();
            Semaphore full = buffer.getFull();
//            set mutex, empty, full in Textfield
            mutexX.setText(mutex.hashCode()+ "");
            emptyY.setText(empty.hashCode() + "");
            fullL.setText(full.hashCode() + "");
//            hide mutex, empty, full Textfield
            mutexX.setEnabled(false);
            emptyY.setEnabled(false);
            fullL.setEnabled(false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "List is Empty");
            consumeItem.setText("");
        }
            
    }//GEN-LAST:event_consumeActionPerformed

    private void consumeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumeItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consumeItemActionPerformed
     BoundedBuffer buffer;
     DefaultListModel model = new DefaultListModel();
     private int numberItems;
     private int getbuffersize;
     private Boolean flagTohandelListSizeWhenConsummingItems = true;
    private void setSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSizeActionPerformed
        try {
            buffer = new BoundedBuffer(Integer.parseInt(size.getText()));
            buffersize.setText(size.getText());
            buffersize.setEnabled(false);
            model.clear();
            size.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "plz, Enter an Integer number");
        }
        
    }//GEN-LAST:event_setSizeActionPerformed

    private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeActionPerformed

    private void emptyYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emptyYActionPerformed

    private void buffersizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buffersizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buffersizeActionPerformed

    private void mutexXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mutexXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mutexXActionPerformed

    private void sizeNow3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeNow3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeNow3ActionPerformed

    private void sizeprogressStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeprogressStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeprogressStateChanged

    private void fullLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullLActionPerformed

    private void ListBoundedBufferValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListBoundedBufferValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ListBoundedBufferValueChanged

    private void ListBoundedBufferAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ListBoundedBufferAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_ListBoundedBufferAncestorRemoved
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListBoundedBuffer;
    private javax.swing.JTextField buffersize;
    private javax.swing.JButton consume;
    private javax.swing.JTextField consumeItem;
    private javax.swing.JTextField emptyY;
    private javax.swing.JTextField fullL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mutexX;
    private javax.swing.JButton produce;
    private javax.swing.JTextField produceItem;
    private javax.swing.JButton setSize;
    private javax.swing.JTextField size;
    private javax.swing.JTextField sizeNow3;
    private javax.swing.JProgressBar sizeprogress;
    // End of variables declaration//GEN-END:variables

}
